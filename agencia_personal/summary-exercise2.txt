Una agencia dedicada a la selección de Personal, desarrollar un sistema: que seleccione
candidatos para los puestos requeridos por las empresas solicitantes y brinde la información
para el cobro de comisiones.

Persona desea que la agencia lo coloque en el mercado laboral deberá completar
con sus datos personales y ANTECEDENTES laborales en una planilla.

Bussines rules:
Una persona puede tener cualquier combinación de estudios(TITULOS) terciarios y/o
universitarios completos y/o incompletos(FECHA_GRADUACION).
Los TITULOS se encuentras codificados.

Antecedentes Laborales(EMPRESA):
cuit y razón social de la empresa donde trabajó, dirección y teléfono.

La persona deberá indicar además el CARGO ocupado, las fechas(FECHA_DESDE-FECHA_HASTA)
en que lo ocupó y la persona de contacto(PERSONA_CONTACTO) para dicho cargo ocupado.
Los CARGOS (tanto de ANTECEDENTES como de CONTRATOS) se encuentran codificados(COD_CARGO).

Cuando una empresa solicitante(SOLICITUDES_EMPRESAS) requiere personal:
se informa al sistema la fecha de solicitud(FECHA_SOLICITUD),
el o los CARGOS a cubrir(DESC_CARGO), junto a los años de experiencia, la edad
mínima y máxima de los candidatos y, si es necesario, el sexo para cada
cargo a cubrir. Si es la primera vez que la empresa solicitante realiza alguna
gestión con la agencia se deberá registrar su CUIT, razón social,
dirección, e-mail(EMAIL) y TE.

De cada ENTREVISTA realizada por las empresas solicitantes(SOLICITUDES_EMPRESAS)
se registra: nro de entrevista (NRO: generado por nuestro sistema), fecha, hora,
datos personales del candidato entrevistado,
cargo para el cual se realiza la entrevista y nombre del entrevistador
y resultado final(RESULTADO_FINAL) de la entrevista (se indica si el candidato aplica
o no para el cargo).

De realizarse EVALUACIONES (tests) en la entrevista, se detallará el resultado
del las mismas.
Las evaluaciones pueden ser:
    Test de Personalidad
    Test de Aptitud y Eficiencia
    Test de Inteligencia.
aunque pueden existir otras.

Las EVALUACIONES se encuentran codificadas(COD_EVALUACION, DESC_EVALUACION).

Una empresa solicitante(SOLICITUDES_EMPRESAS) puede realizar ENTREVISTAS a
más de una PERSONA por cada CARGO solicitado.

Una PERSONA para una empresa solicitante(SOLICITUDES_EMPRESAS) puede tener varias
ENTREVISTAS y varias EVALUACIONES.

Una vez que la empresa solicitante decide contratar(CONTRATO) a algún/os candidatos/s
informará la/s persona/s que contrata junto al cargo, la fecha de incorporación
y de finalización del CONTRATO que le realiza a cada una.

El sistema deberá registrar esta situación generando un número de CONTRATO que
es único, donde se registra:
    • Datos Personales del empleado
    • Empresa solicitante que lo incorpora
    • Cargo
    • Fecha de incorporación y Fecha de finalización del contrato
    • Sueldo y Porcentaje de comisión(COMISIONES)
      (con el fin de calcular la comisión que le corresponde a la agencia)

Al final de cada mes se informará a cada empresa que haya contratado personal
las personas contratadas en el mes y a cuánto asciende la COMISIÓN que debe abonar
por cada CONTRATO.
Esta COMISIÓN es calculada según el porcentaje y el sueldo que indique cada
CONTRATO vigente en cada EMPRESA (fecha de finalización del contrato <= fecha actual),
luego se registra para cada mes, si dicha comisión fue abonada.


Se necesitan los siguientes informes:
1. Dado un cargo, las empresas que lo han solicitado. -> where cod_cargo = 567;

2. Listado de empresas que no nos hayan contratado personas durante el 2007. -> subconsulta

3. Listado de personas que hayan solicitado a nuestra agencia(fecha_registro_agencia) que lo coloque en el mercado
laboral durante el año 2007. Se deberá indicar Datos personales, estudios cursados.

4. Listado de personas que haya solicitado a nuestra agencia que lo coloquen en el mercado laboral indicando datos
personales y posibles cargos a cubrir (cargos que el postulante haya indicado como antecedentes y/o que haya
trabajado según algún contrato firmado por la agencia).

5. Para la Empresa Solicitante Viejos Amigos y para el 21/09/2007 indicar la solicitud de cargos a cubrir, mostrando
los nombres de los cargos.

6. Dada una persona mostrar todas las entrevistas realizadas y el resultado de las evaluaciones indicando las
empresas que solicitaron la entrevista, el cargo para el cual se realizó y el nombre del entrevistador.

7. Emitir el Informe de candidatos para una empresa que solicita cargos. Los datos a ingresar son: cargo a cubrir:
Director de Obras, nacido entre 1978 y 1988. El listado debe incluir: Nombre y Apellido, Fecha Nacimiento,
Títulos y Fecha de graduación de cada título. Si la persona no posee ningún titulo, pero ha ocupado el cargo igual
deberá ser mostrado, quedando la columna de título en blanco.

8. Mostrar el importe total de la deuda de contratos detallado por empresa (aquellas comisiones que la empresa no
haya abonado a la fecha).

9.
Listado de personas inscriptas que poseen título universitario y nunca hayan sido contratada por las empresas
solicitantes. El listado debe indicar: Nombre y Apellido, Fecha de registro, Titulo Universitario, cargos
10. (ACT) La agencia requiere para aquellos contratos vigentes que se actualicen los valores de los sueldos con un
20% de aumento.

/* 1. */
select distinct  e.cuit, e.razon_social, se.cod_cargo, c.desc_cargo
from empresas e
inner join solicitudes_empresas se
on e.cuit = se.cuit
inner join cargos c
on c.cod_cargo = se.cod_cargo
where se.cod_cargo = 6;

/* 2. */
select e.cuit, e.razon_social from empresas e
where e.cuit not in
(select co.cuit from contratos co
where co.fecha_incorporacion >= '2007-01-01' and
      co.fecha_incorporacion <= '2007-12-31');

/* 3 */--si usa inner en lugar de left está bien también

select pe.dni, pe.apeynom, pt.cod_titulo, ti.desc_titulo
from personas pe
left join personas_titulos pt
on pe.dni = pt.dni
left join titulos ti
on pt.cod_titulo = ti.cod_titulo
where pe.fecha_registro_agencia >= '2007-01-01' and
      pe.fecha_registro_agencia <= '2007-12-31';

/*4*/
drop temporary table if exists antecedentesycontratos;

create temporary table antecedentesycontratos
(
 select ant.dni, car.*
 from cargos car inner join antecedentes ant
 on car.`cod_cargo`=ant.`cod_cargo`)
 union
( select con.dni, car.*
 from cargos car inner join contratos con
 on car.`cod_cargo`=con.`cod_cargo`
);

select pe.*, ayc.desc_cargo
from personas pe
left join antecedentesycontratos ayc
on ayc.dni=pe.dni

drop temporary table if exists antecedentesycontratos;

/*5.*/

select e.*,c.desc_cargo
from cargos c
inner join solicitudes_empresas s
on c.cod_cargo = s.cod_cargo
inner join empresas e
on s.cuit=e.cuit
where s.cuit = '30-10504876-5'
and s.fecha_solicitud = '2007-09-21'

/* 6*/

select e.cuit, e.razon_social, ent.nombre_entrevistador, c.desc_cargo,
       eval.desc_evaluacion, ev.resultado
from empresas  e inner join
     entrevistas ent
                 on ent.cuit = e.cuit left join
     entrevistas_evaluaciones ev
                 on ent.nro_entrevista = ev.nro_entrevista left join
     evaluaciones eval
                 on ev.cod_evaluacion = eval.cod_evaluacion inner join
     cargos c
                 on ent.cod_cargo = c.cod_cargo
where ent.dni = 27890765;

/* 7 */

select pe.apeynom, pe.fecha_nacimiento,
       ti.desc_titulo, pt.fecha_graduacion, c.desc_cargo
from personas pe
left join antecedentes ant on ant.dni = pe.dni --acá puede ir inner
left join cargos c on c.cod_cargo = ant.cod_cargo --acá puede ir inner
left join personas_titulos pt on pe.dni = pt.dni
left join titulos ti on ti.cod_titulo = pt.cod_titulo
where c.desc_cargo = 'Director de Obras'
and fecha_nacimiento between '1978-01-01' and '1988-12-31';

/* 8 */

select e.cuit, e.razon_social, sum(com.importe_comision)
from contratos co inner join
     comisiones com
               on co.nro_contrato = com.nro_contrato inner join
     empresas e on co.cuit = e.cuit
where com.fecha_pago is null
group by e.cuit, e.razon_social;

/* 9 */
select pe.apeynom, pe.fecha_registro_agencia, ti.desc_titulo, c.desc_cargo
from personas pe inner join personas_titulos pt on pe.dni = pt.dni
inner join titulos ti on pt.cod_titulo = ti.cod_titulo
inner join antecedentes ant on ant.dni = pe.dni
inner join cargos c on c.cod_cargo = ant.cod_cargo
WHERE ti.tipo_titulo = 'Universitario'
  and pe.dni not in (select co.dni from contratos co)
  and pt.`fecha_graduacion` is not null

/* 11 */
update contratos
set sueldo = sueldo * 1.2
where fecha_finalizacion_contrato > '2008-02-27'
and fecha_caducidad is null;


/* 11 */
/*
select c.desc_cargo, count(*), se.`fecha_solicitud`
from empresas e, solicitudes_empresas se, cargos c
where se.cuit = e.cuit
  and c.cod_cargo = se.cod_cargo
  and c.cod_cargo not in (select co.cod_cargo from contratos co)
  group by c.desc_cargo;
*/ --falla por clave foranea incompleta, incrédulos comparar resultados

 select c.desc_cargo, count(*), se.`fecha_solicitud`
 from solicitudes_empresas se left join contratos co
 on  se.`cuit`=co.`cuit`
 and se.`cod_cargo`=co.`cod_cargo`
 and se.`fecha_solicitud`=co.`fecha_solicitud`
 inner join cargos c on c.`cod_cargo`=se.`cod_cargo`
 where co.`nro_contrato` is null
 group by c.desc_cargo;


/* 12 */

drop temporary table if exists com_total;

create temporary table com_total
(
 select sum(importe_comision) total
 from comisiones
 where fecha_pago is not null
);

select e.razon_social, count(*), sum(com.importe_comision) as TotalComisiones,
       ((Sum(com.importe_comision)*100)/Total) as Porcentaje
from com_total, contratos co inner join comisiones com on co.nro_contrato = com.nro_contrato
     inner join empresas e on co.cuit = e.cuit
where com.fecha_pago is not null
group by total, e.cuit, e.razon_social;

drop temporary table if exists com_total;


/* 12 */
START TRANSACTION;
insert into personas (dni, apeynom, fecha_nacimiento, fecha_registro_agencia)
values (30425782, 'Lousteau, Pedro', '1982-08-25', now());

insert into personas_titulos (dni, cod_titulo, fecha_graduacion)
values (30425782, 7, '2007-12-25');

insert into antecedentes (dni, cod_cargo, fecha_desde, fecha_hasta, cuit, persona_contacto)
values (30425782, 6, '2005-01-05', '2006-12-31','30-21098732-4', 'Juan Perez');

COMMIT;



